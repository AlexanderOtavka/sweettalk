{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "SweetTalk",
	"patterns": [
		{ "include": "#comments" },
		{ "include": "#keywords" },
		{ "include": "#strings" },
		{ "include": "#numbers" },
		{ "include": "#punctuation" },
		{ "include": "#annotations" },
		{ "include": "#inline-functions" },
		{ "include": "#the-identifiers" },
		{ "include": "#that-identifiers" },
		{ "include": "#a-identifiers" },
		{ "include": "#literal-argument-identifiers" },
		{ "include": "#function-identifiers" }
	],
	"repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.block.sweettalk",
          "begin": "\\-{4}\\-*\\s*$",
          "end": "\\-{4}\\-*\\s*$"
        },
        {
          "name": "comment.line.sweettalk",
          "match": "\\-{2}.*$"
        }
      ]
    },
		"keywords": {
			"patterns": [
        {
          "name": "keyword.control.sweettalk",
          "match": "\\b(do|return|is|does|match|then|otherwise)\\b|(\\?)"
        },
        {
          "name": "keyword.control.box.sweettalk",
          "match": "\\b((open|use|share|from)\\s+box|as|use|share)\\b"
        },
        {
          "name": "keyword.other.sweettalk",
          "match": "\\b(let|clarifying)\\b"
        },
        {
          "name": "keyword.operator.application.sweettalk",
          "match": "\\|>|<-"
        },
        {
          "name": "keyword.operator.relational.sweettalk",
          "match": "==|!=|(<=)|(>=)|(<)|(>)"
        },
        {
          "name": "keyword.operator.assignment.sweettalk",
          "match": "="
        },
        {
          "name": "keyword.operator.spread.sweettalk",
          "match": "\\.{3}"
        },
        {
          "name": "keyword.operator.logical.sweettalk",
          "match": "\\b(not)\\b|(\\&|\\|)"
        },
        {
          "name": "keyword.operator.arithmetic.sweettalk",
          "match": "\\+\\+|\\+|-|\\*|/"
        }
      ]
    },
		"strings": {
      "patterns": [
        {
          "name": "string.quoted.double.sweettalk",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            { "include": "#string-escapes" },
            { "include": "#template-expressions" }
          ]
        },
        {
          "name": "string.quoted.backtick.sweettalk",
          "begin": "`",
          "end": "`",
          "patterns": [
            { "include": "#string-escapes" },
            { "include": "#template-expressions" }
          ]
        }
      ]
    },
    "string-escapes": {
      "name": "constant.character.escape.sweettalk",
      "match": "\\\\."
    },
    "template-expressions": {
      "name": "meta.template.expression",
      "begin": "\\[",
      "end": "\\]",
      "patterns": [
        { "include": "#comments" },
        { "include": "#numbers" },
        { "include": "#punctuation" },
        { "include": "#the-identifiers" },
        { "include": "#function-identifiers" }
      ]
    },
    "numbers": {
      "name": "constant.numeric.sweettalk",
      "match": "\\b([\\d_]+(\\.[\\d_]+)?)\\b"
    },
    "inline-functions": {
      "begin": "((a|the)\\s+f'n)\\s+'",
      "end": "'",
      "beginCaptures": {
        "1": {
          "name": "storage.type.function.sweettalk"
        }
      },
      "patterns": [
        { "include": "#function-names" }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "begin": "('s)\\s+(f'n)\\s+'",
          "end": "'",
          "beginCaptures": {
            "1": {
              "name": "punctuation.accessor.sweettalk"
            },
            "2": {
              "name": "storage.type.function.sweettalk"
            }
          },
          "patterns": [
            { "include": "#function-names" }
          ]
        },
        {
          "match": "('s)\\s+(?!(?:the|that|a|an)\\b)(\\w+\\b)(?!\\s*[\\w\\(\\{])",
          "captures": {
            "1": {
              "name": "punctuation.accessor.sweettalk"
            },
            "2": {
              "name": "variable.other.property.sweettalk"
            }
          }
        },
        {
          "name": "punctuation.accessor.sweettalk",
          "match": "'s(\\s+#|\\b)"
        },
        {
          "name": "punctuation.separator.sweettalk",
          "match": "[,:]"
        },
        {
          "match": "^\\s*(-)",
          "captures": {
            "1": {
              "name": "punctuation.separator.sweettalk"
            }
          }
        },
        {
          "name": "punctuation.terminator.sweettalk",
          "match": "\\."
        }
      ]
    },
    "annotations": {
      "name": "meta.annotation.sweettalk",
      "begin": "\\[",
      "end": "\\]",
      "beginCaptures": {
        "0": {
          "name": "punctuation.annotation.begin.sweettalk"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.annotation.end.sweettalk"
        }
      },
      "patterns": [
        { "include": "#comments" },
        {
          "name": "keyword.control.sweettalk",
          "match": "\\b(awaited|shared)\\b"
        },
        {
          "name": "storage.modifier.sweettalk",
          "match": "\\b(optional|default|unused)\\b"
        },
        { "include": "#strings" },
        { "include": "#numbers" },
        { "include": "#punctuation" },
        { "include": "#the-identifiers" },
        { "include": "#function-identifiers" }
      ]
    },
    "the-identifiers": {
      "begin": "\\b(the)\\b",
      "end": "\\b(\\w+)\\b",
      "beginCaptures": {
        "0": {
          "name": "storage.modifier.article.sweettalk"
        }
      },
      "endCaptures": {
        "0": {
          "name": "variable.other.constant.sweettalk"
        }
      },
      "patterns": [
        { "include": "#annotations" }
      ]
    },
    "that-identifiers": {
      "begin": "\\b(that)\\b",
      "end": "\\b(\\w+)\\b",
      "beginCaptures": {
        "0": {
          "name": "storage.modifier.article.sweettalk"
        }
      },
      "endCaptures": {
        "0": {
          "patterns": [
            {
              "name": "variable.language.sweettalk",
              "match": "thing"
            },
            {
              "name": "variable.other.constant.sweettalk"
            }
          ]
        }
      },
      "patterns": [
        { "include": "#annotations" }
      ]
    },
    "a-identifiers": {
      "begin": "\\b(a|an)\\b",
      "end": "\\b(\\w+)\\b",
      "beginCaptures": {
        "0": {
          "name": "storage.modifier.article.sweettalk"
        }
      },
      "endCaptures": {
        "0": {
          "name": "variable.parameter.sweettalk"
        }
      },
      "patterns": [
        { "include": "#annotations" }
      ]
    },
    "literal-argument-identifiers": {
      "name": "variable.parameter.sweettalk",
      "match": "\\b(\\w+)\\s+(?=\"|\\d)"
    },
    "function-identifiers": {
      "name": "entity.name.function",
      "match": "\\b(\\w+)\\b"
    },
    "function-names": {
      "patterns": [
        { "include": "#keywords" },
        { "include": "#a-identifiers" },
        { "include": "#function-identifiers" }
      ]
    }
	},
	"scopeName": "source.sweettalk"
}
